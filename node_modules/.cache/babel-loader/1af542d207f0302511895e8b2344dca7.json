{"ast":null,"code":"import _objectSpread from \"/Users/Zeko-MB/reactjs/todo-list/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/Zeko-MB/reactjs/todo-list/src/components-test/App.js\";\nimport React, { Component } from \"react\";\nimport PageTemplate from \"./PageTemplate\";\nimport TodoInput from \"./TodoInput\";\nimport TodoList from \"./TodoList\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      input: \"\",\n      todoList: [{\n        idx: 0,\n        flag: false,\n        msg: \"어렵다 리액트\"\n      }, {\n        idx: 1,\n        flag: true,\n        msg: \"안보고 짤 수 있을때까지.....\"\n      }]\n    };\n\n    this.getIndex = () => {\n      const list = this.state.todoList;\n      let a = list[list.length - 1].idx;\n      return ++a;\n    };\n\n    this.handleChange = e => {\n      /*\n      * 변수 선언을 하려면 변수명을 value로 지정해야 e.target.value와 매핑됨.\n      * 변수 선언 없이 e.target.value로 넣어도 무방함.\n      * */\n      const value = e.target.value;\n      this.setState({\n        input: value\n      });\n    };\n\n    this.handleInsert = () => {\n      /* input에 입력한 값을 msg에 넣어야하므로 input으로 변수 선언(this.state.input) 후 신규 msg에 넣어줌. */\n      const _this$state = this.state,\n            input = _this$state.input,\n            todoList = _this$state.todoList;\n      const newTodo = {\n        idx: this.getIndex(),\n        flag: false,\n        msg: input\n      };\n\n      if (input !== \"\") {\n        this.setState({\n          input: \"\",\n          todoList: [...todoList, newTodo]\n        });\n      }\n\n      console.log(this.state);\n    };\n\n    this.handleDelete = idx => {\n      console.log(this.state);\n      const todoList = this.state.todoList;\n      const delIndex = this.state.todoList.findIndex(todo => todo.idx === idx);\n      this.setState({\n        todoList: [...todoList.slice(0, delIndex), ...todoList.slice(delIndex + 1, todoList.length)]\n      });\n    };\n\n    this.handleToggle = idx => {\n      const todoList = this.state.todoList;\n      const chkIndex = this.state.todoList.findIndex(todo => todo.idx === idx);\n\n      const chkTodo = _objectSpread({}, todoList[chkIndex], {\n        flag: !todoList[chkIndex].flag\n      });\n\n      this.setState({\n        todoList: [...todoList.slice(0, chkIndex), chkTodo, ...todoList.slice(chkIndex + 1, todoList.length)]\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(PageTemplate, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(TodoInput, {\n      onChange: this.handleChange,\n      value: this.state.input,\n      todoInsert: this.handleInsert,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }), React.createElement(TodoList, {\n      todoList: this.state.todoList,\n      onToggle: this.handleToggle,\n      onDelete: this.handleDelete,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/Zeko-MB/reactjs/todo-list/src/components-test/App.js"],"names":["React","Component","PageTemplate","TodoInput","TodoList","App","state","input","todoList","idx","flag","msg","getIndex","list","a","length","handleChange","e","value","target","setState","handleInsert","newTodo","console","log","handleDelete","delIndex","findIndex","todo","slice","handleToggle","chkIndex","chkTodo","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport PageTemplate from \"./PageTemplate\";\nimport TodoInput from \"./TodoInput\";\nimport TodoList from \"./TodoList\";\n\nclass App extends Component {\n\tstate = {\n\t\tinput : \"\",\n\t\ttodoList : [\n\t\t\t{\n\t\t\t\tidx : 0,\n\t\t\t\tflag : false,\n\t\t\t\tmsg : \"어렵다 리액트\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tidx : 1,\n\t\t\t\tflag : true,\n\t\t\t\tmsg : \"안보고 짤 수 있을때까지.....\"\n\t\t\t}\n\t\t]\n\t};\n\n\t/**\n\t *  마지막 index 가져옴.\n\t * @returns {number}\n\t */\n\tgetIndex = () => {\n\t\tconst list = this.state.todoList;\n\t\tlet a = list[list.length-1].idx;\n\n\t\treturn ++a;\n\t};\n\n\thandleChange = (e) => {\n\t\t/*\n\t\t* 변수 선언을 하려면 변수명을 value로 지정해야 e.target.value와 매핑됨.\n\t\t* 변수 선언 없이 e.target.value로 넣어도 무방함.\n\t\t* */\n\t\tconst {value} = e.target;\n\t\tthis.setState({\n\t\t\tinput : value\n\t\t});\n\t};\n\n\thandleInsert = () => {\n\t\t/* input에 입력한 값을 msg에 넣어야하므로 input으로 변수 선언(this.state.input) 후 신규 msg에 넣어줌. */\n\t\tconst {input, todoList} = this.state;\n\t\tconst newTodo = {\n\t\t\tidx : this.getIndex(),\n\t\t\tflag : false,\n\t\t\tmsg : input\n\t\t};\n\n\t\tif(input !== \"\"){\n\t\t\tthis.setState({\n\t\t\t\tinput : \"\",\n\t\t\t\ttodoList : [\n\t\t\t\t\t...todoList,\n\t\t\t\t\tnewTodo\n\t\t\t\t]\n\t\t\t});\n\t\t}\n\t\tconsole.log(this.state);\n\t};\n\n\thandleDelete = (idx) => {\n\t\tconsole.log(this.state);\n\t\tconst {todoList} = this.state;\n\t\tconst delIndex = this.state.todoList.findIndex(todo => todo.idx === idx);\n\n\t\tthis.setState({\n\t\t\ttodoList : [\n\t\t\t\t...todoList.slice(0, delIndex),\n\t\t\t\t...todoList.slice(delIndex+1, todoList.length)\n\t\t\t]\n\t\t})\n\t};\n\n\thandleToggle = (idx) => {\n\t\tconst {todoList} = this.state;\n\t\tconst chkIndex = this.state.todoList.findIndex(todo => todo.idx === idx);\n\n\t\tconst chkTodo = {\n\t\t\t...todoList[chkIndex],\n\t\t\tflag : !todoList[chkIndex].flag\n\t\t};\n\n\t\tthis.setState({\n\t\t\ttodoList : [\n\t\t\t\t...todoList.slice(0, chkIndex),\n\t\t\t\tchkTodo,\n\t\t\t\t...todoList.slice(chkIndex+1, todoList.length)\n\t\t\t]\n\t\t})\n\t};\n\n\trender(){\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<PageTemplate>\n\t\t\t\t\t<TodoInput onChange={this.handleChange} value={this.state.input} todoInsert={this.handleInsert}/>\n\t\t\t\t\t<TodoList todoList={this.state.todoList} onToggle={this.handleToggle} onDelete={this.handleDelete}/>\n\t\t\t\t</PageTemplate>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}